#
# Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License").
# You may not use this file except in compliance with the License.
# A copy of the License is located at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# or in the "license" file accompanying this file. This file is distributed 
# on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either 
# express or implied. See the License for the specific language governing 
# permissions and limitations under the License.
#

# =======
# Summary
# =======
#
# This AWS CloudFormation template gives insights on the compliance posture of the account where it is deployed. 
#
# The set of Rules depends on the parameters you set during the deployment. Three RuleSets are available:
# - Security Baseline: Include best-practices rules ordered by their criticality.
# - PCI Guidance: Give guidance for achieving the Payment Card Industry Data Security Standard (PCI DSS).
# - High-Availability: Focus on the reliability of your environment.
#
# =============
# Prerequisites 
# ============= 
#
# 1) The Compliance-as-code engine (https://github.com/awslabs/aws-config-engine-for-compliance-as-code) must be installed in the Compliance Account.
# 2) You must know the S3 Bucket Name where Config is centralized and the Account ID of the Compliance Account. Ideally, you should replace them in the template itself, as they are unlikely to change and it simplify scaling to other accounts.
#
# ================
# Baseline RuleSet
# ================
#
# The Baseline RuleSet provides guidance on the Security Epics of the AWS Cloud Adoption Framework (CAF). The Security Epics consist of groups of user stories (use cases and abuse cases) that you can work on during sprints. Each of these epics has multiple iterations addressing increasingly complex requirements and layering in robustness. Although we advise the use of agile, the epics can also be treated as general work streams or topics that help in prioritizing and structuring delivery using any other framework. 
#
# This RuleSet has been designed to cover key baseline controls of a multi-account environment. It assumes that your AWS deployment follows Well-Architected best practices, including but not limited to:
# - Have a centralized Security Logging Account
# - Have a centralized Security Monitoring Account (it can be the same AWS Account)
#
# This RuleSet supports to:
# - classify an Application account by sensitivity (e.g. Sensitive, Confidential, etc.)
# - classify each Rule by criticality to allow prioritization of potential remediation (e.g. CRITICAL, HIGH, etc.)
#
# ====================
# PCI Guidance RuleSet
# ====================
#
# The PCI Guidance RuleSet provides guidance for achieving the Payment Card Industry Data Security Standard (PCI DSS) in AWS. This content is provided "as is" with no guarantees expressed or implied.  The content of this RuleSet is subject to change without notice. Likewise, future changes to the AWS environment may alter some of the guidance in this RuleSet. Your PCI assessor may have different interpretations and the guidance in this RuleSet. None of the content in this RuleSet is intended to replace or supersede the requirements of the PCI DSS.
#
# Intent: While this RuleSet discusses AWS aspects useful for validating PCI compliance readiness as well as formal compliance, it does not offer step-by-step instructions on conducting an assessment of an AWS environment.  However, it may assist QSAs in understanding how an AWS environment can be PCI-compliant.
#
# =========================
# High-Availability RuleSet
# =========================
#
# The High-Availability RuleSet provides guidance on the Reliability of the elements supporting your application. As addtionnal cost may occur, you may want to deploy this RuleSet only in appropriate environment. 
#
# =======================
# Details of the RuleSets
# =======================
#
# The table below maps the RuleSets and the Rule:
#
# | --- | ------------------------------------ | ---------------- | -------- | ----------------- |
# |     |                                      | Baseline RuleSet | RuleSet  | Ruleset           |
# | Id  | Rule Name                            | by Account       | for PCI  | for               |
# |     |                                      | Classification   | guidance | High Availability |
# | --- | ------------------------------------ | ---------------- | -------- | ----------------- |
# | 1.1 | root_no_access                       | All              |          |                   |
# | 1.2 | root_mfa_enabled                     | All              | Yes      |                   |
# | 1.3 | root_no_access_key                   | All              |          |                   |
# | 1.4 | iam_policy_no_full_star              | All              | Yes      |                   |
# | 2.1 | cloudtrail_centralized_encrypted_lfi | All              | Yes      |                   |
# | 2.2 | cloudwatch_event_bus_centralized     | All              |          |                   |
# | 2.3 | config_enabled_centralized           | All              | Yes      |                   |
# | 2.4 | guardduty_enabled_centralized        | All              | Yes      |                   |
# | 3.1 | vpc_securitygroup_default_blocked    | All              |          |                   |
# | 3.2 | vpc_no_route_to_igw                  | All              |          |                   |
# | 3.3 | acm_certificate_expiry_90_days       | Private or above | Yes      |                   |
# | 4.1 | kms_cmk_rotation_activated           | Private or above | Yes      |                   |
# | 4.2 | s3_bucket_public_read_prohibited     | All              | Yes      |                   |
# | 4.3 | s3_bucket_public_write_prohibited    | All              |          |                   |
# | 4.4 | s3_bucket_ssl_requests_only          | Private or above | Yes      |                   |
# | 4.5 | ec2_ebs_volume_encrypted             | Private or above | Yes      |                   |
# | 4.6 | rds_storage_encrypted                | Private or above | Yes      |                   |
# | 6.1 | rds_multi_az_enabled                 |                  |          | Yes               |
# | 7.1 | compliance_ruleset_latest_installed  | All              |          |                   |
# | --- | ------------------------------------ | ---------------- | -------- | ----------------- |
#
# ====================
# Details of the Rules
# ====================
#
# The following rules are covered. The controls are organized by Security Epics of the AWS Cloud Adoption Framework:
#
# Identity and Access Management
# ==============================
# | Id  | Name                              | Type    | Criticity |
# | --- | --------------------------------- | ------- | --------- | 
# | 1.1 | root_no_access                    | Custom  | CRITICAL  |
# | 1.2 | root_mfa_enabled                  | Custom  | CRITICAL  |
# | 1.3 | root_no_access_key                | Custom  | CRITICAL  |
# | 1.4 | iam_policy_no_full_star           | Custom  | HIGH      |
#
# Logging and Monitoring
# ======================
# | Id  | Name                                 | Type    | Criticity |
# | --- | ------------------------------------ | ------- | --------- | 
# | 2.1 | cloudtrail_centralized_encrypted_lfi | Custom  | CRITICAL  |
# | 2.2 | cloudwatch_event_bus_centralized     | Custom  | HIGH      |
# | 2.3 | config_enabled_centralized           | Custom  | HIGH      |
# | 2.4 | guardduty_enabled_centralized        | Custom  | HIGH      |
#
# Infrastructure Security
# =======================
# | Id  | Name                                 | Type    | Criticity |
# | --- | ------------------------------------ | ------- | --------- | 
# | 3.1 | vpc_securitygroup_default_blocked    | Custom  | MEDIUM    |
# | 3.2 | vpc_no_route_to_igw                  | Custom  | HIGH      |
# | 3.3 | acm_certificate_expiry_90_days       | Managed | HIGH      |
#
# Data Protection
# ===============
# | Id  | Name                              | Type    | Criticity |
# | --- | --------------------------------- | ------- | --------- | 
# | 4.1 | kms_cmk_rotation_activated        | Custom  | LOW       |
# | 4.2 | s3_bucket_public_read_prohibited  | Managed | CRITICAL  |
# | 4.3 | s3_bucket_public_write_prohibited | Managed | MEDIUM    |
# | 4.4 | s3_bucket_ssl_requests_only       | Managed | HIGH      |
# | 4.5 | ec2_ebs_volume_encrypted          | Managed | MEDIUM    |
# | 4.6 | rds_storage_encrypted             | Managed | HIGH      |
#
# Resilience
# ==========
# | Id  | Name                               | Type    | Criticity |
# | --- | ---------------------------------- | ------- | --------- | 
# | 6.1 | rds_multi_az_enabled               | Managed | HIGH      |
#
# Compliance Validation
# =====================
# | Id  | Name                                | Type    | Criticity | 
# | --- | ----------------------------------- | ------- | --------- | 
# | 7.1 | compliance_ruleset_latest_installed | Custom  | HIGH      | 
#

AWSTemplateFormatVersion: '2010-09-09'
Description: Setup the Compliance-as-Code RuleSet in Application Account

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Compliance-as-Code Engine Configuration
        Parameters:
         - CentralizedS3BucketConfigFullName
         - ComplianceAccountId
         - ComplianceAuditRoleName
      - Label:
          default: RuleSet to deploy
        Parameters:
         - AccountClassification
         - AddPCIguidanceRuleSet
         - AddHighAvailaibilityRuleSet
      - Label:
          default: (Advanced User Only) RuleSet options
        Parameters: 
         - FullVisibility
         - DeployDownToCriticity
         - LM22override

Parameters:
  CentralizedS3BucketConfigFullName:
    ConstraintDescription: Enter DNS-compliant name
    Description: Bucket name where Config logs are centrally stored. It is located in the Compliance Account.
    Default: centralized-config-112233445566
    MaxLength: 63
    MinLength: 10
    Type: String
  ComplianceAccountId:
    ConstraintDescription: 12 digits, no dashes
    Description: Account ID of the Compliance Account. The compliance-as-code engine must be installed in this account first.
    Default: 112233445566
    MaxLength: 12
    MinLength: 12
    Type: String
  ComplianceAuditRoleName:
    Description: Role Name of the Compliance Account Cross Account Role
    Default: ComplianceAuditRole-DO-NOT-DELETE
    Type: String

#
# BEGINNING OF THE PARAMETER SECTION TO BE ADAPTED TO YOUR NEEDS
# 

  FullVisibility:
    Description: Create more rules for a granular visibility, including an individual Rule Criticity. Select "false" will reduce cost and reduce the granular visibility. This option will apply all Rules from the Security Baseline RuleSet.
    Default: true
    AllowedValues:
      - true
      - false
    Type: String  

  DeployDownToCriticity:
    Description: Choose deploy down to which Rule criticality. Useful to have an iterative approach in monitoring and fixing the compliance of existing accounts. It does not affect PCI guidance RuleSet, HA RuleSet and the Rule 7.1 on Compliance Validation. 
    Default: all
    AllowedValues:
      - all
      - critical
      - high
      - medium
    Type: String  
    
  AccountClassification:
    Description: The classification of this AWS account. Depending of the classification, relevant Rules will be deployed as part of the Security Baseline RuleSet.
    Type: String
    Default: 1-Sensitive
    AllowedValues:
      - 1-Sensitive
      - 2-Confidential
      - 3-Private
      - 4-Public
    ConstraintDescription: "must be one of those 4 values: 1-Sensitive | 2-Confidential | 3-Private | 4-Public"

  AddPCIguidanceRuleSet:
    Description: Choose "true" to deploy all Rules from the PCI guidance RuleSet.
    Type: String
    Default: false
    AllowedValues:
      - true
      - false    

  AddHighAvailaibilityRuleSet:
    Description: Choose "true" to deploy the High-Availability RuleSet. It is suitable for applications wanting to achieve over 99.9% availability.
    Type: String
    Default: false
    AllowedValues:
      - true
      - false   
      
  LM22override:
    Description: Choose "deactivate" to not deploy. "FullVisibility" must be "true" to work. Let "default" to deploy depending on other parameters.
    Type: String
    Default: default
    AllowedValues:
      - default
      - deactivate
  
Conditions:
    Extended: !Equals [ !Ref FullVisibility, true ]
    NotExtended: !Equals [ !Ref FullVisibility, false ]
    PCIguidance: !Equals [ !Ref AddPCIguidanceRuleSet, true ]
    HA: !Equals [ !Ref AddHighAvailaibilityRuleSet, true ]
    AccountClassificationAll: !Or
        - !Equals [ !Ref AccountClassification, 1-Sensitive]
        - !Equals [ !Ref AccountClassification, 2-Confidential]
        - !Equals [ !Ref AccountClassification, 3-Private]
        - !Equals [ !Ref AccountClassification, 4-Public]
    AccountClassificationPrivateOrAbove: !Or
        - !Equals [ !Ref AccountClassification, 1-Sensitive]
        - !Equals [ !Ref AccountClassification, 2-Confidential]
        - !Equals [ !Ref AccountClassification, 3-Private]    
    Critical: !Or
        - !Equals [ !Ref DeployDownToCriticity, all]
        - !Equals [ !Ref DeployDownToCriticity, critical]
        - !Equals [ !Ref DeployDownToCriticity, high]
        - !Equals [ !Ref DeployDownToCriticity, medium]
    High: !Or
        - !Equals [ !Ref DeployDownToCriticity, all]
        - !Equals [ !Ref DeployDownToCriticity, high]
        - !Equals [ !Ref DeployDownToCriticity, medium]
    Medium: !Or
        - !Equals [ !Ref DeployDownToCriticity, all]
        - !Equals [ !Ref DeployDownToCriticity, medium]
    Low: !Equals [ !Ref DeployDownToCriticity, all]
    
    IAM1notextended: !And
        - !Condition Critical
        - !Condition NotExtended
    LM2notextended: !And
        - !Condition Critical
        - !Condition NotExtended
    IS3notextended: !And
        - !Condition High
        - !Condition NotExtended
    DP4notextended: !And
        - !Condition Low
        - !Condition NotExtended
    
    IAM11: !And
        - !Condition Critical
        - !Condition Extended
        - !Condition AccountClassificationAll
    IAM12: !Or
        - !And
          - !Condition Critical
          - !Condition Extended
          - !Condition AccountClassificationAll
        - !Condition PCIguidance
    IAM13: !And
        - !Condition Critical
        - !Condition Extended
        - !Condition AccountClassificationAll
    IAM14: !Or
        - !And
          - !Condition High
          - !Condition Extended
          - !Condition AccountClassificationAll
        - !Condition PCIguidance
    LM21: !Or
        - !And
          - !Condition Critical
          - !Condition Extended
          - !Condition AccountClassificationAll
        - !Condition PCIguidance
    LM22: !And
        - !Condition High
        - !Condition Extended
        - !Condition AccountClassificationAll
        - !Not [ !Equals [ !Ref LM22override, deactivate]]
    LM23: !Or
        - !And
          - !Condition High
          - !Condition Extended
          - !Condition AccountClassificationAll
        - !Condition PCIguidance
    LM24: !Or
        - !And
          - !Condition High
          - !Condition Extended
          - !Condition AccountClassificationAll
        - !Condition PCIguidance
    IS31: !And
        - !Condition Medium
        - !Condition Extended
        - !Condition AccountClassificationAll
    IS32: !And
        - !Condition High
        - !Condition Extended
        - !Condition AccountClassificationAll
    IS33: !Or
        - !And
          - !Condition High
          - !Condition AccountClassificationPrivateOrAbove
        - !Condition PCIguidance
    DP41: !Or
        - !And
          - !Condition Low
          - !Condition Extended
          - !Condition AccountClassificationPrivateOrAbove
        - !Condition PCIguidance
    DP42: !Or
        - !And
          - !Condition Critical
          - !Condition AccountClassificationAll
        - !Condition PCIguidance
    DP43: !And
        - !Condition Medium
        - !Condition Extended
        - !Condition AccountClassificationAll
    DP44: !Or
        - !And
          - !Condition High
          - !Condition AccountClassificationPrivateOrAbove
        - !Condition PCIguidance
    DP45: !Or
        - !And
          - !Condition Medium
          - !Condition AccountClassificationPrivateOrAbove
        - !Condition PCIguidance
    DP46: !Or
        - !And
          - !Condition High
          - !Condition AccountClassificationAll
        - !Condition PCIguidance
    R61: !And
        - !Condition HA
        - !Condition High
    
#
# END OF THE PARAMETER SECTION TO BE ADAPTED TO YOUR NEEDS
#

Resources:

#
# BEGINNING OF THE RESOURCES SECTION TO BE ADAPTED TO YOUR NEEDS
# Modify your rule set here. Each new Config rule of the ruleSet needs Config Rule creation. For managed rules, modify the Source parameter.
# Add the RuleCriticity at the beginning of the name of the Rule, followed by a dash ("-"). Examples of the RuleCriticity: 1_CRITICAL | 2_HIGH | 3_MEDIUM | 4_LOW
#

  RuleSetRule1:
    Condition: IAM1notextended
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: 1_CRITICAL-Identity_and_Access_Management
      Description: "Checks controls related to Identity and Access Management. Read the code for more details."
      InputParameters:
        RoleToAssume: !Ref ComplianceAuditRoleName
      Source:
        Owner: CUSTOM_LAMBDA
        SourceIdentifier: !Join [ ':', [ 'arn:aws:lambda', !Ref 'AWS::Region', !Ref ComplianceAccountId, 'function', SecurityEpic1-Identity_and_Access_Management ] ]
        SourceDetails:
        -
          EventSource: 'aws.config'
          MessageType: ScheduledNotification
          MaximumExecutionFrequency: TwentyFour_Hours
    DependsOn:
    - ConfigurationRecorder
    - DeliveryChannel

  RuleSetRule2:
    Condition: LM2notextended
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: 1_CRITICAL-Logging_and_Monitoring
      Description: "Checks controls related to Logging and Monitoring. Read the code for more details."
      InputParameters:
        RoleToAssume: !Ref ComplianceAuditRoleName
      Source:
        Owner: CUSTOM_LAMBDA
        SourceIdentifier: !Join [ ':', [ 'arn:aws:lambda', !Ref 'AWS::Region', !Ref ComplianceAccountId, 'function', SecurityEpic2-Logging_and_Monitoring ] ]
        SourceDetails:
        -
          EventSource: 'aws.config'
          MessageType: ScheduledNotification
          MaximumExecutionFrequency: TwentyFour_Hours
    DependsOn:
    - ConfigurationRecorder
    - DeliveryChannel

  RuleSetRule3:
    Condition: IS3notextended
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: 2_HIGH-Infrastructure_Security
      Description: "Checks controls related to Infrastructure Security. Read the code for more details."
      InputParameters:
        RoleToAssume: !Ref ComplianceAuditRoleName
      Source:
        Owner: CUSTOM_LAMBDA
        SourceIdentifier: !Join [ ':', [ 'arn:aws:lambda', !Ref 'AWS::Region', !Ref ComplianceAccountId, 'function', SecurityEpic3-Infrastructure_Security ] ]
        SourceDetails:
        -
          EventSource: 'aws.config'
          MessageType: ScheduledNotification
          MaximumExecutionFrequency: TwentyFour_Hours
    DependsOn:
    - ConfigurationRecorder
    - DeliveryChannel

  RuleSetRule4:
    Condition: DP4notextended
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: 4_LOW-Data_Protection
      Description: "Checks controls related to Data Protection. Read the code for more details."
      InputParameters:
        RoleToAssume: !Ref ComplianceAuditRoleName
      Source:
        Owner: CUSTOM_LAMBDA
        SourceIdentifier: !Join [ ':', [ 'arn:aws:lambda', !Ref 'AWS::Region', !Ref ComplianceAccountId, 'function', SecurityEpic4-Data_Protection ] ]
        SourceDetails:
        -
          EventSource: 'aws.config'
          MessageType: ScheduledNotification
          MaximumExecutionFrequency: TwentyFour_Hours
    DependsOn:
    - ConfigurationRecorder
    - DeliveryChannel

  RuleSetManagedRuleIS3:
    Type: AWS::Config::ConfigRule
    Condition: IS33
    Properties:
      ConfigRuleName: 2_HIGH-IS_3_3-acm_certificate_expiry_90_days
      Description: "Checks whether ACM Certificates in your account are marked for expiration within 90 days (configurable). Certificates provided by ACM are automatically renewed. ACM does not automatically renew certificates that you import."
      InputParameters:
       daysToExpiration: 90
      Scope:
        ComplianceResourceTypes: 
        - 'AWS::ACM::Certificate'
      Source:
        Owner: AWS
        SourceIdentifier: ACM_CERTIFICATE_EXPIRATION_CHECK
      MaximumExecutionFrequency: TwentyFour_Hours
    DependsOn: 
    - ConfigurationRecorder
    - DeliveryChannel
    
  RuleSetManagedRuleDP2:
    Condition: DP42
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: 1_CRITICAL-DP_4_2-s3_bucket_public_read_prohibited
      Description: "Checks that your S3 buckets do not allow public read access. If an S3 bucket policy or bucket ACL allows public read access, the bucket is noncompliant."
      Scope:
        ComplianceResourceTypes: 
        - 'AWS::S3::Bucket'
      Source:
        Owner: AWS
        SourceIdentifier: S3_BUCKET_PUBLIC_READ_PROHIBITED
    DependsOn: 
    - ConfigurationRecorder
    - DeliveryChannel    

  RuleSetManagedRuleDP3:
    Condition: DP43
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: 3_MEDIUM-DP_4_3-s3_bucket_public_write_prohibited
      Description: "Checks that your S3 buckets do not allow public write access. If an S3 bucket policy or bucket ACL allows public write access, the bucket is noncompliant."
      Scope:
        ComplianceResourceTypes: 
        - 'AWS::S3::Bucket'     
      Source:
        Owner: AWS
        SourceIdentifier: S3_BUCKET_PUBLIC_WRITE_PROHIBITED
    DependsOn: 
    - ConfigurationRecorder
    - DeliveryChannel
    
  RuleSetManagedRuleDP4:
    Condition: DP44
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: 2_HIGH-DP_4_4-s3_bucket_ssl_requests_only
      Description: "Checks whether S3 buckets have policies that require requests to use Secure Socket Layer (SSL)."
      Scope:
        ComplianceResourceTypes: 
        - 'AWS::S3::Bucket'     
      Source:
        Owner: AWS
        SourceIdentifier: S3_BUCKET_SSL_REQUESTS_ONLY
    DependsOn: 
    - ConfigurationRecorder
    - DeliveryChannel

  RuleSetManagedRuleDP5:
    Condition: DP45
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: 3_MEDIUM-DP_4_5-ec2_ebs_volume_encrypted
      Description: "Checks whether EBS volumes that are in an attached state are encrypted."
      Scope:
        ComplianceResourceTypes: 
        - 'AWS::EC2::Volume'
      Source:
        Owner: AWS
        SourceIdentifier: ENCRYPTED_VOLUMES
    DependsOn: 
    - ConfigurationRecorder
    - DeliveryChannel

  RuleSetManagedRuleDP6:
    Condition: DP46
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: 2_HIGH-DP_4_6-rds_storage_encrypted
      Description: "Checks whether storage encryption is enabled for your RDS DB instances."
      Scope:
        ComplianceResourceTypes: 
        - 'AWS::RDS::DBInstance'
      Source:
        Owner: AWS
        SourceIdentifier: RDS_STORAGE_ENCRYPTED
    DependsOn: 
    - ConfigurationRecorder
    - DeliveryChannel

  RuleSetManagedRuleR1:
    Condition: R61
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: 2_HIGH-R_6_1-rds_multi_az_enabled
      Description: "Checks whether high availability is enabled for your RDS DB instances."
      Scope:
        ComplianceResourceTypes: 
        - 'AWS::RDS::DBInstance'
      Source:
        Owner: AWS
        SourceIdentifier: RDS_MULTI_AZ_SUPPORT
    DependsOn: 
    - ConfigurationRecorder
    - DeliveryChannel
    
  RuleSetDetailedRuleIAM1:
    Condition: IAM11
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: 1_CRITICAL-IAM_1_1-root_no_access
      Description: "Check that the root user did not access the account for the last 24 hours (configurable)."
      InputParameters:
        RoleToAssume: !Ref ComplianceAuditRoleName
      Source:
        Owner: CUSTOM_LAMBDA
        SourceIdentifier: !Join [ ':', [ 'arn:aws:lambda', !Ref 'AWS::Region', !Ref ComplianceAccountId, 'function', SecurityEpic1-Identity_and_Access_Management ] ]
        SourceDetails:
        -
          EventSource: 'aws.config'
          MessageType: ScheduledNotification
          MaximumExecutionFrequency: TwentyFour_Hours
    DependsOn:
    - ConfigurationRecorder
    - DeliveryChannel

  RuleSetDetailedRuleIAM2:
    Condition: IAM12
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: 1_CRITICAL-IAM_1_2-root_mfa_enabled
      Description: "Check whether the root account user has MFA enabled."
      InputParameters:
        RoleToAssume: !Ref ComplianceAuditRoleName
      Source:
        Owner: CUSTOM_LAMBDA
        SourceIdentifier: !Join [ ':', [ 'arn:aws:lambda', !Ref 'AWS::Region', !Ref ComplianceAccountId, 'function', SecurityEpic1-Identity_and_Access_Management ] ]
        SourceDetails:
        -
          EventSource: 'aws.config'
          MessageType: ScheduledNotification
          MaximumExecutionFrequency: TwentyFour_Hours
    DependsOn:
    - ConfigurationRecorder
    - DeliveryChannel

  RuleSetDetailedRuleIAM3:
    Condition: IAM13
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: 1_CRITICAL-IAM_1_3-root_no_access_key
      Description: "Check the root account user has no access key."
      InputParameters:
        RoleToAssume: !Ref ComplianceAuditRoleName
      Source:
        Owner: CUSTOM_LAMBDA
        SourceIdentifier: !Join [ ':', [ 'arn:aws:lambda', !Ref 'AWS::Region', !Ref ComplianceAccountId, 'function', SecurityEpic1-Identity_and_Access_Management ] ]
        SourceDetails:
        -
          EventSource: 'aws.config'
          MessageType: ScheduledNotification
          MaximumExecutionFrequency: TwentyFour_Hours
    DependsOn:
    - ConfigurationRecorder
    - DeliveryChannel

  RuleSetDetailedRuleIAM4:
    Condition: IAM14
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: 2_HIGH-IAM_1_4-iam_policy_no_full_star
      Description: Check whether an IAM user has an IAM policy with all permission enabled (or "Action:*"). It includes the AWS-managed policy named AdministratorAccess.
      InputParameters:
        RoleToAssume: !Ref ComplianceAuditRoleName
      Source:
        Owner: CUSTOM_LAMBDA
        SourceIdentifier: !Join [ ':', [ 'arn:aws:lambda', !Ref 'AWS::Region', !Ref ComplianceAccountId, 'function', SecurityEpic1-Identity_and_Access_Management ] ]
        SourceDetails:
        -
          EventSource: 'aws.config'
          MessageType: ScheduledNotification
          MaximumExecutionFrequency: TwentyFour_Hours
    DependsOn:
    - ConfigurationRecorder
    - DeliveryChannel
    
  RuleSetDetailedRuleLM1:
    Condition: LM21
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: 1_CRITICAL-LM_2_1-cloudtrail_centralized_encrypted_lfi
      Description: Check whether the Security CloudTrail is properly configured, including that it 1) is active, 2) includes all regions and global resources 3) is centralized in your Logging AWS account, 4) is encrypted and 5) that the delivery of the logs are successful.
      InputParameters:
        RoleToAssume: !Ref ComplianceAuditRoleName
      Source:
        Owner: CUSTOM_LAMBDA
        SourceIdentifier: !Join [ ':', [ 'arn:aws:lambda', !Ref 'AWS::Region', !Ref ComplianceAccountId, 'function', SecurityEpic2-Logging_and_Monitoring ] ]
        SourceDetails:
        -
          EventSource: 'aws.config'
          MessageType: ScheduledNotification
          MaximumExecutionFrequency: TwentyFour_Hours
    DependsOn:
    - ConfigurationRecorder
    - DeliveryChannel
    
  RuleSetDetailedRuleLM2:
    Condition: LM22
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: 2_HIGH-LM_2_2-cloudwatch_event_bus_centralized
      Description: Checks that an event bus is configured in all AWS Regions of this account to your Security Monitoring AWS Account, and that an active rule sends all events to the bus.
      InputParameters:
        RoleToAssume: !Ref ComplianceAuditRoleName
      Source:
        Owner: CUSTOM_LAMBDA
        SourceIdentifier: !Join [ ':', [ 'arn:aws:lambda', !Ref 'AWS::Region', !Ref ComplianceAccountId, 'function', SecurityEpic2-Logging_and_Monitoring ] ]
        SourceDetails:
        -
          EventSource: 'aws.config'
          MessageType: ScheduledNotification
          MaximumExecutionFrequency: TwentyFour_Hours
    DependsOn:
    - ConfigurationRecorder
    - DeliveryChannel
    
  RuleSetDetailedRuleLM3:
    Condition: LM23
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: 2_HIGH-LM_2_3-config_enabled_centralized
      Description: Check that AWS Config is configured in all AWS Regions of this account, enabled and that the configuration snapshots are sent in a centralized S3 bucket.
      InputParameters:
        RoleToAssume: !Ref ComplianceAuditRoleName
      Source:
        Owner: CUSTOM_LAMBDA
        SourceIdentifier: !Join [ ':', [ 'arn:aws:lambda', !Ref 'AWS::Region', !Ref ComplianceAccountId, 'function', SecurityEpic2-Logging_and_Monitoring ] ]
        SourceDetails:
        -
          EventSource: 'aws.config'
          MessageType: ScheduledNotification
          MaximumExecutionFrequency: TwentyFour_Hours
    DependsOn:
    - ConfigurationRecorder
    - DeliveryChannel
    
  RuleSetDetailedRuleLM4:
    Condition: LM24
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: 2_HIGH-LM_2_4-guardduty_enabled_centralized
      Description: Check that Amazon GuardDuty is configured in all AWS Regions of this account, and that it is centralized in your Security Monitoring Account.
      InputParameters:
        RoleToAssume: !Ref ComplianceAuditRoleName
      Source:
        Owner: CUSTOM_LAMBDA
        SourceIdentifier: !Join [ ':', [ 'arn:aws:lambda', !Ref 'AWS::Region', !Ref ComplianceAccountId, 'function', SecurityEpic2-Logging_and_Monitoring ] ]
        SourceDetails:
        -
          EventSource: 'aws.config'
          MessageType: ScheduledNotification
          MaximumExecutionFrequency: TwentyFour_Hours
    DependsOn:
    - ConfigurationRecorder
    - DeliveryChannel
    
  RuleSetDetailedRuleIS1:
    Condition: IS31
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: 3_MEDIUM-IS_3_1-vpc_securitygroup_default_blocked
      Description: Check that, in all AWS Regions in all VPC, the default security group is blocking all traffic.
      InputParameters:
        RoleToAssume: !Ref ComplianceAuditRoleName
      Source:
        Owner: CUSTOM_LAMBDA
        SourceIdentifier: !Join [ ':', [ 'arn:aws:lambda', !Ref 'AWS::Region', !Ref ComplianceAccountId, 'function', SecurityEpic3-Infrastructure_Security ] ]
        SourceDetails:
        -
          EventSource: 'aws.config'
          MessageType: ScheduledNotification
          MaximumExecutionFrequency: TwentyFour_Hours
    DependsOn:
    - ConfigurationRecorder
    - DeliveryChannel
    
  RuleSetDetailedRuleIS2:
    Condition: IS32
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: 2_HIGH-IS_3_2-vpc_main_route_table_no_igw
      Description: Check that, in all VPCs of this region, the main route table does not contain a default route to an Internet Gateway (IGW). The route must be in the subnet route table(s).
      InputParameters:
        RoleToAssume: !Ref ComplianceAuditRoleName
      Source:
        Owner: CUSTOM_LAMBDA
        SourceIdentifier: !Join [ ':', [ 'arn:aws:lambda', !Ref 'AWS::Region', !Ref ComplianceAccountId, 'function', SecurityEpic3-Infrastructure_Security ] ]
        SourceDetails:
        -
          EventSource: 'aws.config'
          MessageType: ScheduledNotification
          MaximumExecutionFrequency: TwentyFour_Hours
    DependsOn:
    - ConfigurationRecorder
    - DeliveryChannel
    
  RuleSetDetailedRuleDP1:
    Condition: DP41
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: 4_LOW-DP_4_1-kms_cmk_rotation_activated
      Description: Check, for all AWS Regions, that the automatic rotation is enabled for all Customer-managed Customer Master Key (CMK).
      InputParameters:
        RoleToAssume: !Ref ComplianceAuditRoleName
      Source:
        Owner: CUSTOM_LAMBDA
        SourceIdentifier: !Join [ ':', [ 'arn:aws:lambda', !Ref 'AWS::Region', !Ref ComplianceAccountId, 'function', SecurityEpic4-Data_Protection ] ]
        SourceDetails:
        -
          EventSource: 'aws.config'
          MessageType: ScheduledNotification
          MaximumExecutionFrequency: TwentyFour_Hours
    DependsOn:
    - ConfigurationRecorder
    - DeliveryChannel
    
    
    
#
# END OF THE RESOURCES SECTION TO BE ADAPTED TO YOUR NEEDS
#

  ConfigurationRecorder:
    Type: AWS::Config::ConfigurationRecorder
    Properties:
      RecordingGroup:
        AllSupported: 'True'
        IncludeGlobalResourceTypes: 'True'
      RoleARN: !Join ["", ["arn:aws:iam::", !Ref 'AWS::AccountId', ":role/service-role/AWSConfigRole-DO-NOT-DELETE"]]
    DependsOn:
    - AWSConfigRole

  DeliveryChannel:
    Type: AWS::Config::DeliveryChannel
    Properties:
      ConfigSnapshotDeliveryProperties:
        DeliveryFrequency: TwentyFour_Hours
      S3BucketName: !Ref CentralizedS3BucketConfigFullName

  AWSConfigRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service: config.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSConfigRole
      Path: /service-role/
      RoleName: AWSConfigRole-DO-NOT-DELETE

  ConfigS3WritePolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      Roles:
      - AWSConfigRole-DO-NOT-DELETE
      PolicyName: !Join
        - '-'
        - - ConfigS3Write
          - !Ref 'AWS::AccountId'
          - !Ref 'AWS::Region'
      PolicyDocument:
        Statement:
        - Action:
          - s3:PutObject
          Effect: Allow
          Resource:
          - !Join [ "", [ "arn:aws:s3:::", !Ref CentralizedS3BucketConfigFullName, "/AWSLogs/", !Ref 'AWS::AccountId', "/*"] ]
          Sid: !Join ["", ["ConfigS3Write", !Ref 'AWS::AccountId'] ]
        Version: 2012-10-17
    DependsOn:
    - AWSConfigRole

  CrossAcountAuditRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Ref ComplianceAuditRoleName
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              AWS: !Join ["", ["arn:aws:iam::", !Ref ComplianceAccountId, ":root"]]
            Action:
              - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
      - 'arn:aws:iam::aws:policy/SecurityAudit'
      - 'arn:aws:iam::aws:policy/CloudWatchEventsReadOnlyAccess'
      - 'arn:aws:iam::aws:policy/AWSCloudTrailReadOnlyAccess'

  CrossAcountAuditRolePolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyDocument:
        Statement:
          - Action: 'config:PutEvaluations'
            Effect: Allow
            Resource: '*'
        Version: 2012-10-17
      PolicyName: PutEvaluationPolicy
      Roles:
       - !Ref ComplianceAuditRoleName
    DependsOn: CrossAcountAuditRole

  CrossAcountAuditRolePolicy2:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyDocument:
        Statement:
          - Action: 
              - 'guardduty:Get*'
              - 'guardduty:List*'
            Effect: Allow
            Resource: '*'
        Version: 2012-10-17
      PolicyName: GuarddutyReadOnly
      Roles:
       - !Ref ComplianceAuditRoleName
    DependsOn: CrossAcountAuditRole
    
  RuleSetReporter:
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: 2_HIGH-CV_7_1-compliance_ruleset_latest_installed
      Description: Check that the latest template for the RuleSet is installed in this account.
      InputParameters:
        RoleToAssume: !Ref ComplianceAuditRoleName
        AccountClassification: !Ref AccountClassification
      Source:
        Owner: CUSTOM_LAMBDA
        SourceIdentifier: !Join [ ":", [ 'arn:aws:lambda', !Ref "AWS::Region", !Ref ComplianceAccountId, 'function', SecurityEpic7-Compliance_Validation ] ]
        SourceDetails:
        -
          EventSource: "aws.config"
          MaximumExecutionFrequency: TwentyFour_Hours
          MessageType: ScheduledNotification
    DependsOn:
    - ConfigurationRecorder
    - DeliveryChannel

#
# Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License").
# You may not use this file except in compliance with the License.
# A copy of the License is located at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# or in the "license" file accompanying this file. This file is distributed
# on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
# express or implied. See the License for the specific language governing
# permissions and limitations under the License.
#

#
# No change is needed in this template
#

AWSTemplateFormatVersion: 2010-09-09
Description: Sets up a rule of the RuleSet
Parameters:
  SourceLambdaBucket:
    Type: String
    Description: Bucket name where lambda code zips are placed
    MaxLength: 63
    MinLength: 3
    ConstraintDescription: Enter the name not the ARN, must be in the same region than the stack
  RuleSetName:
    Type: String
    Description: Lambda zip name to deploy (name of rule will be the same)
    ConstraintDescription: Do not include ".zip"
  LambdaRuleRoleARN:
    ConstraintDescription: Enter Role ARN to be attached to the Lambda
    Description: Must be full ARN of the IAM Role
    Type: String
  CreateSnsTopicForComplianceNotifications:
    AllowedValues:
      - "Yes"
      - "No"
    Default: "No"
    Description: Determines whether to create an SNS topic for notifications
    Type: String
  EmailAddressForComplianceNotifications:
    ConstraintDescription: Enter email address to which notifications will be sent
    Description: Email address to which notifications will be sent
    Type: String
    Default: ''

Conditions:
  ShouldCreateSnsTopicForComplianceNotifications: !Equals [!Ref CreateSnsTopicForComplianceNotifications, 'Yes']
  ShouldCreateSnsTopicForComplianceNotificationsSubscription: !And
    - !Condition ShouldCreateSnsTopicForComplianceNotifications
    - !Not [!Equals [!Ref EmailAddressForComplianceNotifications, '']]

Resources:

  SnsTopic:
    Type: 'AWS::SNS::Topic'
    Condition: ShouldCreateSnsTopicForComplianceNotifications
    Properties:
      TopicName: consolidated-monitoring

  SnsTopicSubscription:
    Type: 'AWS::SNS::Subscription'
    Condition: ShouldCreateSnsTopicForComplianceNotificationsSubscription
    Properties:
      Endpoint: !Ref EmailAddressForComplianceNotifications
      Protocol: email
      TopicArn: !Ref SnsTopic

  SnsTopicParameter:
    Type: 'AWS::SSM::Parameter'
    Condition: ShouldCreateSnsTopicForComplianceNotifications
    Properties:
      Name: SntTopicForComplianceNotifications
      Description: SNS Topic for Notifications
      Type: String
      Value: !Ref SnsTopic

  RuleSetRuleLambda:
    Type: 'AWS::Lambda::Function'
    Properties:
      Code:
        S3Bucket: !Ref SourceLambdaBucket
        S3Key: !Join [ ".", [ !Ref RuleSetName , zip]]
      FunctionName: !Ref RuleSetName
      Handler: !Join [ ".", [ !Ref RuleSetName , lambda_handler]]
      Role: !Ref LambdaRuleRoleARN
      Runtime: python3.6
      Timeout: 300

  RuleSetRuleLambdaPermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Ref RuleSetName
      Principal: config.amazonaws.com
    DependsOn: RuleSetRuleLambda